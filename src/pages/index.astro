---
import Layout from '../layouts/Layout.astro';
import Hero from '../components/Hero.astro';
import Projects from '../components/Projects.astro';
import About from '../components/About.astro';
import Contact from '../components/Contact.astro';
import Footer from '../components/Footer.astro';

// Project data
const projects = [
  {
    title: "Microlearning Content Design",
    subtitle: "Making Complex Topics Digestible",
    description: "Transformed technical documentation into bite-sized learning experiences. Reduced learning time by 50% while improving retention rates.",
    tags: ["Learning Design", "Content Strategy", "Documentation"],
    image: "/contentcraft/images/microlearning-preview.svg",
    link: "/contentcraft/projects/microlearning"
  },
  {
    title: "Deployment Tool Content Design",
    subtitle: "Simplifying AI Deployment Workflows",
    description: "Redesigned deployment tool documentation to improve user experience. Reduced support tickets by 25% and increased successful deployments.",
    tags: ["Technical Writing", "UX Design", "AI Tools"],
    image: "/contentcraft/images/deployment-preview.svg",
    link: "/contentcraft/projects/deployment-tool"
  },
  {
    title: "Documentation Redesign",
    subtitle: "Modernizing Technical Documentation",
    description: "Led complete overhaul of technical documentation system. Improved user satisfaction by 35% and reduced content maintenance time.",
    tags: ["Information Architecture", "Content Strategy", "Technical Writing"],
    image: "/contentcraft/images/documentation-preview.svg",
    link: "/contentcraft/projects/documentation-redesign"
  }
];

// Meta data
const title = "Content Designer Portfolio";
const description = "Technical content designer specializing in documentation systems and UX writing";
---

<Layout title={title} description={description} isMainNav={true}>
  <div class="min-h-screen flex flex-col">
    <main class="flex-grow">
      <!-- Hero Section -->
      <Hero />

      <!-- Projects Section -->
      <Projects projects={projects} />

      <!-- About Section (includes Skills) -->
      <About />

      <!-- Contact Section -->
      <Contact />
    </main>

    <!-- Footer -->
    <Footer />
  </div>
</Layout>

<script>
  // Smooth scroll for anchor links
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
      e.preventDefault();
      const href = this.getAttribute('href');
      if (!href) return;
      
      const target = document.querySelector(href);
      if (!target) return;

      target.scrollIntoView({
        behavior: 'smooth'
      });

      // Update URL without scrolling
      history.pushState(null, '', href);
    });
  });

  // Form submission handling
  const form = document.getElementById('contact-form');
  if (form) {
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      // Get form data
      const formData = new FormData(form);
      const data = Object.fromEntries(formData);

      try {
        // Here you would typically send the data to your backend
        // For now, we'll just log it
        console.log('Form submitted:', data);
        
        // Clear form
        form.reset();
        
        // Show success message
        alert('Thank you for your message! I\'ll get back to you soon.');
      } catch (error) {
        console.error('Error submitting form:', error);
        alert('There was an error sending your message. Please try again.');
      }
    });
  }

  // Intersection Observer for animations
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('animate-fade-in');
        observer.unobserve(entry.target);
      }
    });
  }, observerOptions);

  // Observe all sections
  document.querySelectorAll('section').forEach(section => {
    observer.observe(section);
  });
</script>

<style>
  /* Animation classes */
  .animate-fade-in {
    animation: fadeIn 0.8s ease-out forwards;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>