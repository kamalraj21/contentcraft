---
import Layout from '../../layouts/Layout.astro';
import CaseStudyNavigation from '../../components/CaseStudyNavigation.astro';
import DocImage from '../../components/DocImage.astro';

const metrics = [
  { 
    value: "30%", 
    label: "Faster Deployment", 
    description: "Reduction in time-to-deploy",
    icon: "‚ö°"
  },
  { 
    value: "85%", 
    label: "User Satisfaction", 
    description: "Post-implementation survey results",
    icon: "üéØ"
  },
  { 
    value: "25%", 
    label: "Support Reduction", 
    description: "Decrease in support tickets",
    icon: "üìâ"
  }
];

const challenges = [
  { 
    title: "Complex Workflows",
    description: "AI deployment processes were creating significant user friction and slowing down implementation timelines",
    impact: "Delayed project timelines and increased costs",
    icon: "üîÑ"
  },
  { 
    title: "Technical Barriers",
    description: "Heavy technical jargon and complex procedures were creating barriers for non-technical stakeholders",
    impact: "Limited adoption across teams",
    icon: "üöß"
  },
  { 
    title: "Insufficient Guidance",
    description: "Lack of clear, contextual documentation led to increased support needs and user frustration",
    impact: "High support ticket volume",
    icon: "‚ùì"
  }
];

const process = [
  {
    phase: "Discovery",
    title: "User Research & Analysis",
    description: "Deep dive into user needs and pain points",
    activities: [
      "Conducted 25+ user interviews across different roles",
      "Created detailed user journey maps",
      "Analyzed support ticket patterns",
      "Identified key friction points in deployment workflow"
    ],
    tools: ["User Interviews", "Journey Mapping", "Analytics Review"]
  },
  {
    phase: "Strategy",
    title: "Content Architecture",
    description: "Developing the content framework",
    activities: [
      "Designed role-based content pathways",
      "Created modular documentation structure",
      "Developed progressive disclosure framework",
      "Established technical accuracy benchmarks"
    ],
    tools: ["Information Architecture", "Content Modeling", "User Flows"]
  },
  {
    phase: "Implementation",
    title: "Content Development & Testing",
    description: "Creating and validating solutions",
    activities: [
      "Built interactive deployment guides",
      "Developed troubleshooting workflows",
      "Created contextual help system",
      "Implemented user feedback loops"
    ],
    tools: ["Technical Writing", "UX Writing", "Usability Testing"]
  }
];

const outcomes = [
  {
    category: "Efficiency Gains",
    metrics: [
      { stat: "30%", label: "Faster deployment completion" },
      { stat: "60%", label: "Reduction in deployment errors" },
      { stat: "40%", label: "Decrease in support escalations" }
    ]
  },
  {
    category: "User Experience",
    metrics: [
      { stat: "85%", label: "User satisfaction rating" },
      { stat: "92%", label: "Task completion rate" },
      { stat: "4.8/5", label: "Documentation clarity score" }
    ]
  },
  {
    category: "Business Impact",
    metrics: [
      { stat: "45%", label: "Increase in self-service resolution" },
      { stat: "25%", label: "Reduction in onboarding time" },
      { stat: "3x", label: "Increase in deployment frequency" }
    ]
  }
];

const tags = ["UX Writing", "Technical Documentation", "User Research", "Content Strategy"];
---

<Layout title="Deployment Tool Content Design">
  <!-- Sticky Progress Bar -->
  <div class="fixed top-16 left-0 right-0 h-1 bg-gray-100 z-40">
    <div class="progress-bar h-full bg-blue-600 transition-all duration-300"></div>
  </div>

  <article class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
    <!-- Header -->
    <header class="text-center mb-16">
      <div class="flex flex-wrap gap-2 justify-center mb-6">
        {tags.map((tag) => (
          <span class="px-3 py-1 text-sm font-medium text-blue-600 bg-blue-50 rounded-full">
            {tag}
          </span>
        ))}
      </div>
      <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
        Deployment Tool Content Design
      </h1>
      <p class="text-xl text-gray-600 max-w-2xl mx-auto">
        Simplifying AI deployment workflows through strategic content design and user-centered documentation
      </p>
    </header>

    <!-- Executive Summary -->
    <section class="mb-20" id="summary">
      <div class="bg-gradient-to-br from-blue-50 to-indigo-50 rounded-2xl p-8 md:p-10">
        <h2 class="text-2xl font-bold text-gray-900 mb-6">Project Overview</h2>
        <p class="text-gray-700 text-lg leading-relaxed mb-10">
          Led the transformation of complex AI deployment documentation into an intuitive, user-friendly guidance system. 
          This initiative significantly improved deployment success rates and reduced technical barriers for users.
        </p>
        
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
          {metrics.map((metric) => (
            <div class="bg-white rounded-xl p-6 hover:shadow-md transition-all duration-300">
              <div class="text-3xl mb-2">{metric.icon}</div>
              <div class="text-2xl font-bold text-blue-600">{metric.value}</div>
              <div class="font-medium text-gray-900 mb-1">{metric.label}</div>
              <div class="text-sm text-gray-600">{metric.description}</div>
            </div>
          ))}
        </div>
      </div>
    </section>

    <!-- Challenge -->
    <section class="mb-20" id="challenge">
      <h2 class="text-2xl font-bold text-gray-900 mb-6">The Challenge</h2>
      <div class="space-y-6">
        {challenges.map((challenge) => (
          <div class="bg-white rounded-xl p-6 border border-gray-100 hover:shadow-md transition-all duration-300">
            <div class="flex items-start">
              <div class="text-2xl mr-4">{challenge.icon}</div>
              <div>
                <h3 class="text-xl font-semibold text-gray-900 mb-2">{challenge.title}</h3>
                <p class="text-gray-600 mb-3">{challenge.description}</p>
                <div class="text-sm font-medium text-red-600">Impact: {challenge.impact}</div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </section>

    <!-- Process -->
    <section class="mb-20" id="process">
      <h2 class="text-2xl font-bold text-gray-900 mb-10">The Process</h2>
      <div class="space-y-12">
        {process.map((step, index) => (
          <div class="relative">
            {index !== process.length - 1 && (
              <div class="absolute left-8 top-20 bottom-0 w-px bg-blue-100"></div>
            )}
            <div class="flex gap-8">
              <div class="flex-shrink-0 w-16 h-16 rounded-full bg-blue-50 flex items-center justify-center">
                <span class="text-xl font-bold text-blue-600">{index + 1}</span>
              </div>
              <div class="flex-grow">
                <div class="bg-white rounded-xl p-6 border border-gray-100 hover:shadow-md transition-all duration-300">
                  <div class="text-sm font-medium text-blue-600 mb-2">{step.phase}</div>
                  <h3 class="text-xl font-semibold text-gray-900 mb-2">{step.title}</h3>
                  <p class="text-gray-600 mb-4">{step.description}</p>
                  
                  <ul class="space-y-3 mb-6">
                    {step.activities.map((activity) => (
                      <li class="flex items-start">
                        <svg class="w-5 h-5 text-blue-600 mr-2 mt-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                        </svg>
                        <span class="text-gray-600">{activity}</span>
                      </li>
                    ))}
                  </ul>

                  <div class="flex flex-wrap gap-2">
                    {step.tools.map((tool) => (
                      <span class="px-3 py-1 text-sm font-medium text-gray-600 bg-gray-100 rounded-full">
                        {tool}
                      </span>
                    ))}
                  </div>
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </section>

    <!-- Outcomes -->
    <section class="mb-20" id="outcomes">
      <h2 class="text-2xl font-bold text-gray-900 mb-10">Results & Impact</h2>
      <div class="grid gap-8 md:grid-cols-3">
        {outcomes.map((category) => (
          <div class="bg-white rounded-xl p-6 border border-gray-100 hover:shadow-md transition-all duration-300">
            <h3 class="text-xl font-semibold text-gray-900 mb-6">{category.category}</h3>
            <div class="space-y-6">
              {category.metrics.map((metric) => (
                <div>
                  <div class="text-2xl font-bold text-blue-600 mb-1">{metric.stat}</div>
                  <div class="text-sm text-gray-600">{metric.label}</div>
                </div>
              ))}
            </div>
          </div>
        ))}
      </div>
    </section>

    <!-- Key Learnings -->
    <section class="mb-20" id="learnings">
      <h2 class="text-2xl font-bold text-gray-900 mb-6">Key Learnings</h2>
      <div class="bg-white rounded-xl p-6 border border-gray-100">
        <ul class="space-y-4">
          <li class="flex items-start">
            <svg class="w-5 h-5 text-blue-600 mr-2 mt-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
            </svg>
            <span class="text-gray-600">Progressive disclosure in technical documentation significantly reduces cognitive load without sacrificing depth</span>
          </li>
          <li class="flex items-start">
            <svg class="w-5 h-5 text-blue-600 mr-2 mt-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
            </svg>
            <span class="text-gray-600">Role-based content pathways significantly improve user engagement and task completion rates</span>
          </li>
          <li class="flex items-start">
            <svg class="w-5 h-5 text-blue-600 mr-2 mt-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
            </svg>
            <span class="text-gray-600">Continuous user feedback loops are essential for maintaining documentation effectiveness</span>
          </li>
        </ul>
      </div>
    </section>

    <!-- Navigation between case studies -->
    <CaseStudyNavigation currentSlug="deployment-tool" />
  </article>
  <CaseStudyNavigation currentSlug="deployment-tool" />
</Layout>

<script>
  // Progress bar functionality
  const progressBar = document.querySelector('.progress-bar');
  
  window.addEventListener('scroll', () => {
    const windowHeight = window.innerHeight;
    const documentHeight = document.documentElement.scrollHeight;
    const scrollTop = window.scrollY;
    
    const scrolled = (scrollTop / (documentHeight - windowHeight)) * 100;
    if (progressBar) {
      progressBar.style.width = `${scrolled}%`;
    }
  });

  // Intersection Observer for fade-in animations
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('fade-in');
        observer.unobserve(entry.target);
      }
    });
  }, observerOptions);

  // Observe all sections
  document.querySelectorAll('section').forEach(section => {
    section.classList.add('opacity-0');
    observer.observe(section);
  });
</script>

<style>
  /* Animations */
  .fade-in {
    animation: fadeIn 0.8s ease-out forwards;
  }

  @keyframes fadeIn {
    from { 
      opacity: 0;
      transform: translateY(20px);
    }
    to { 
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Smooth transitions */
  .transition-all {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 300ms;
  }

  /* Progress bar */
  .progress-bar {
    width: 0%;
  }
</style>