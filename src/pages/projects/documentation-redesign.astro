---
import Layout from '../../layouts/Layout.astro';
import CaseStudyNavigation from '../../components/CaseStudyNavigation.astro';
import DocImage from '../../components/DocImage.astro';

const metrics = [
  { 
    value: "35%", 
    label: "User Satisfaction", 
    description: "Improvement in user satisfaction scores",
    icon: "üìà"
  },
  { 
    value: "25%", 
    label: "Support Reduction", 
    description: "Decrease in support tickets",
    icon: "üéØ"
  },
  { 
    value: "40%", 
    label: "Update Speed", 
    description: "Faster content updates",
    icon: "‚ö°"
  }
];

const challenges = [
  { 
    title: "Navigation Complexity",
    description: "Users struggled to find relevant information due to complex navigation and inconsistent structure",
    impact: "High bounce rates and frustrated users",
    icon: "üó∫Ô∏è"
  },
  { 
    title: "Content Inconsistency",
    description: "Multiple documentation styles and formats across different product areas created confusion",
    impact: "Reduced user trust and adoption",
    icon: "üîÑ"
  },
  { 
    title: "Maintenance Overhead",
    description: "Time-consuming updates and difficulty maintaining content accuracy across platforms",
    impact: "Delayed updates and outdated content",
    icon: "‚öôÔ∏è"
  }
];

const process = [
  {
    phase: "Research",
    title: "Content Audit & Analysis",
    description: "Understanding the current state and user needs",
    activities: [
      "Conducted comprehensive documentation audit",
      "Analyzed user behavior patterns and feedback",
      "Mapped content to user journeys",
      "Identified critical pain points"
    ],
    artifacts: ["Content Inventory", "User Journey Maps", "Analytics Report"]
  },
  {
    phase: "Strategy",
    title: "Information Architecture",
    description: "Designing the new documentation structure",
    activities: [
      "Developed task-based navigation system",
      "Created standardized content templates",
      "Established style guide and governance",
      "Designed content reuse framework"
    ],
    artifacts: ["IA Diagrams", "Content Templates", "Style Guide"]
  },
  {
    phase: "Implementation",
    title: "Content Migration & Optimization",
    description: "Executing the new documentation system",
    activities: [
      "Implemented new information architecture",
      "Migrated and restructured content",
      "Optimized content for search",
      "Set up automated validation"
    ],
    artifacts: ["Migration Plan", "SEO Guidelines", "Validation Scripts"]
  }
];

const features = [
  {
    title: "Task-Based Navigation",
    description: "Reorganized content around user tasks and goals",
    before: "Complex hierarchical navigation",
    after: "Intuitive task-based structure",
    improvement: "45% faster task completion"
  },
  {
    title: "Content Components",
    description: "Created reusable content blocks for consistency",
    before: "Duplicated and inconsistent content",
    after: "Standardized, reusable components",
    improvement: "60% faster updates"
  },
  {
    title: "Search Optimization",
    description: "Enhanced search functionality and metadata",
    before: "Basic keyword search",
    after: "Context-aware search with filters",
    improvement: "85% search success rate"
  }
];

const outcomes = [
  {
    category: "User Experience",
    metrics: [
      { stat: "35%", label: "Improved satisfaction" },
      { stat: "45%", label: "Faster task completion" },
      { stat: "60%", label: "Better findability" }
    ]
  },
  {
    category: "Content Operations",
    metrics: [
      { stat: "40%", label: "Faster updates" },
      { stat: "65%", label: "Content reuse" },
      { stat: "30%", label: "Reduced maintenance" }
    ]
  },
  {
    category: "Business Impact",
    metrics: [
      { stat: "25%", label: "Fewer support tickets" },
      { stat: "50%", label: "Documentation ROI" },
      { stat: "3x", label: "User engagement" }
    ]
  }
];

const tags = ["Information Architecture", "Content Strategy", "Technical Writing", "UX Design"];
---

<Layout title="Documentation Redesign">
  <!-- Progress Indicator -->
  <div class="fixed top-16 left-0 right-0 h-1 bg-gray-100 z-40">
    <div class="progress-bar h-full bg-blue-600 transition-all duration-300"></div>
  </div>

  <article class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
    <!-- Header -->
    <header class="text-center mb-16">
      <div class="flex flex-wrap gap-2 justify-center mb-6">
        {tags.map((tag) => (
          <span class="px-3 py-1 text-sm font-medium text-blue-600 bg-blue-50 rounded-full">
            {tag}
          </span>
        ))}
      </div>
      <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
        Documentation Redesign
      </h1>
      <p class="text-xl text-gray-600 max-w-2xl mx-auto">
        Transforming technical documentation through user-centered design and systematic content architecture
      </p>
    </header>

    <!-- Executive Summary -->
    <section class="mb-20" id="summary">
      <div class="bg-gradient-to-br from-blue-50 to-indigo-50 rounded-2xl p-8 md:p-10">
        <h2 class="text-2xl font-bold text-gray-900 mb-6">Project Overview</h2>
        <p class="text-gray-700 text-lg leading-relaxed mb-10">
          Led a comprehensive documentation modernization initiative that transformed complex technical content 
          into an intuitive, user-friendly knowledge base. The project focused on improving both user experience 
          and content maintainability.
        </p>
        
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
          {metrics.map((metric) => (
            <div class="bg-white rounded-xl p-6 hover:shadow-md transition-all duration-300">
              <div class="text-3xl mb-2">{metric.icon}</div>
              <div class="text-2xl font-bold text-blue-600">{metric.value}</div>
              <div class="font-medium text-gray-900 mb-1">{metric.label}</div>
              <div class="text-sm text-gray-600">{metric.description}</div>
            </div>
          ))}
        </div>
      </div>
    </section>

    <!-- Challenges -->
    <section class="mb-20" id="challenges">
      <h2 class="text-2xl font-bold text-gray-900 mb-6">The Challenge</h2>
      <div class="space-y-6">
        {challenges.map((challenge) => (
          <div class="bg-white rounded-xl p-6 border border-gray-100 hover:shadow-md transition-all duration-300">
            <div class="flex items-start">
              <div class="text-2xl mr-4">{challenge.icon}</div>
              <div>
                <h3 class="text-xl font-semibold text-gray-900 mb-2">{challenge.title}</h3>
                <p class="text-gray-600 mb-3">{challenge.description}</p>
                <div class="text-sm font-medium text-red-600">Impact: {challenge.impact}</div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </section>

    <!-- Process -->
    <section class="mb-20" id="process">
      <h2 class="text-2xl font-bold text-gray-900 mb-10">The Process</h2>
      <div class="space-y-12">
        {process.map((step, index) => (
          <div class="relative">
            {index !== process.length - 1 && (
              <div class="absolute left-8 top-20 bottom-0 w-px bg-blue-100"></div>
            )}
            <div class="flex gap-8">
              <div class="flex-shrink-0 w-16 h-16 rounded-full bg-blue-50 flex items-center justify-center">
                <span class="text-xl font-bold text-blue-600">{index + 1}</span>
              </div>
              <div class="flex-grow">
                <div class="bg-white rounded-xl p-6 border border-gray-100 hover:shadow-md transition-all duration-300">
                  <div class="text-sm font-medium text-blue-600 mb-2">{step.phase}</div>
                  <h3 class="text-xl font-semibold text-gray-900 mb-2">{step.title}</h3>
                  <p class="text-gray-600 mb-4">{step.description}</p>
                  
                  <ul class="space-y-3 mb-6">
                    {step.activities.map((activity) => (
                      <li class="flex items-start">
                        <svg class="w-5 h-5 text-blue-600 mr-2 mt-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                        </svg>
                        <span class="text-gray-600">{activity}</span>
                      </li>
                    ))}
                  </ul>

                  <div class="flex flex-wrap gap-2">
                    {step.artifacts.map((artifact) => (
                      <span class="px-3 py-1 text-sm font-medium text-gray-600 bg-gray-100 rounded-full">
                        {artifact}
                      </span>
                    ))}
                  </div>
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </section>

    <!-- Key Features -->
    <section class="mb-20" id="features">
      <h2 class="text-2xl font-bold text-gray-900 mb-10">Key Improvements</h2>
      <div class="grid gap-8">
        {features.map((feature) => (
          <div class="bg-white rounded-xl p-6 border border-gray-100 hover:shadow-md transition-all duration-300">
            <h3 class="text-xl font-semibold text-gray-900 mb-4">{feature.title}</h3>
            <p class="text-gray-600 mb-6">{feature.description}</p>
            
            <div class="grid md:grid-cols-3 gap-6">
              <div class="p-4 bg-red-50 rounded-lg">
                <div class="text-sm font-medium text-red-600 mb-2">Before</div>
                <div class="text-gray-600">{feature.before}</div>
              </div>
              <div class="p-4 bg-green-50 rounded-lg">
                <div class="text-sm font-medium text-green-600 mb-2">After</div>
                <div class="text-gray-600">{feature.after}</div>
              </div>
              <div class="p-4 bg-blue-50 rounded-lg">
                <div class="text-sm font-medium text-blue-600 mb-2">Impact</div>
                <div class="text-gray-600">{feature.improvement}</div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </section>

    <!-- Results -->
    <section class="mb-20" id="results">
      <h2 class="text-2xl font-bold text-gray-900 mb-10">Results & Impact</h2>
      <div class="grid gap-8 md:grid-cols-3">
        {outcomes.map((category) => (
          <div class="bg-white rounded-xl p-6 border border-gray-100 hover:shadow-md transition-all duration-300">
            <h3 class="text-xl font-semibold text-gray-900 mb-6">{category.category}</h3>
            <div class="space-y-6">
              {category.metrics.map((metric) => (
                <div>
                  <div class="text-2xl font-bold text-blue-600 mb-1">{metric.stat}</div>
                  <div class="text-sm text-gray-600">{metric.label}</div>
                </div>
              ))}
            </div>
          </div>
        ))}
      </div>
    </section>

    <!-- Key Learnings -->
    <section class="mb-20" id="learnings">
      <h2 class="text-2xl font-bold text-gray-900 mb-6">Key Learnings</h2>
      <div class="bg-white rounded-xl p-6 border border-gray-100">
        <ul class="space-y-4">
          <li class="flex items-start">
            <svg class="w-5 h-5 text-blue-600 mr-2 mt-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
            </svg>
            <span class="text-gray-600">User-centered information architecture is crucial for improving content findability and engagement</span>
          </li>
          <li class="flex items-start">
            <svg class="w-5 h-5 text-blue-600 mr-2 mt-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
            </svg>
            <span class="text-gray-600">Standardized content components and templates significantly reduce maintenance overhead</span>
          </li>
          <li class="flex items-start">
            <svg class="w-5 h-5 text-blue-600 mr-2 mt-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
            </svg>
            <span class="text-gray-600">Continuous user feedback and analytics are essential for evolving documentation strategy</span>
          </li>
        </ul>
      </div>
    </section>

    <!-- Navigation between case studies -->
    </article>
     <CaseStudyNavigation currentSlug="documentation-redesign" />
</Layout>

<script>
  // Progress bar functionality
  const progressBar = document.querySelector('.progress-bar');
  
  window.addEventListener('scroll', () => {
    const windowHeight = window.innerHeight;
    const documentHeight = document.documentElement.scrollHeight;
    const scrollTop = window.scrollY;
    
    const scrolled = (scrollTop / (documentHeight - windowHeight)) * 100;
    if (progressBar) {
      progressBar.style.width = `${scrolled}%`;
    }
  });

  // Intersection Observer for fade-in animations
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('fade-in');
        observer.unobserve(entry.target);
      }
    });
  }, observerOptions);

  // Observe all sections and feature cards
  document.querySelectorAll('section, .feature-card').forEach(element => {
    element.classList.add('opacity-0');
    observer.observe(element);
  });

  // Smooth scroll functionality for navigation
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
      e.preventDefault();
      const target = document.querySelector(this.getAttribute('href'));
      if (target) {
        const headerOffset = 80;
        const elementPosition = target.getBoundingClientRect().top;
        const offsetPosition = elementPosition + window.pageYOffset - headerOffset;

        window.scrollTo({
          top: offsetPosition,
          behavior: 'smooth'
        });
      }
    });
  });

  // Table of Contents highlight on scroll
  const tocLinks = document.querySelectorAll('.toc-link');
  const sections = document.querySelectorAll('section[id]');

  window.addEventListener('scroll', () => {
    let current = '';
    
    sections.forEach(section => {
      const sectionTop = section.offsetTop;
      if (window.pageYOffset >= sectionTop - 100) {
        current = section.getAttribute('id');
      }
    });

    tocLinks.forEach(link => {
      link.classList.remove('active');
      if (link.getAttribute('href').includes(current)) {
        link.classList.add('active');
      }
    });
  });
</script>

<style>
  /* Animations */
  .fade-in {
    animation: fadeIn 0.8s ease-out forwards;
  }

  @keyframes fadeIn {
    from { 
      opacity: 0;
      transform: translateY(20px);
    }
    to { 
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Progress bar */
  .progress-bar {
    width: 0%;
    transition: width 0.2s ease-out;
  }

  /* Card hover effects */
  .hover\:shadow-md {
    transition: all 0.3s ease;
  }

  .hover\:shadow-md:hover {
    transform: translateY(-2px);
  }

  /* TOC styles */
  .toc-link {
    transition: all 0.2s ease;
  }

  .toc-link.active {
    color: #2563eb;
    font-weight: 500;
  }

  /* Section transitions */
  section {
    transition: opacity 0.5s ease;
  }

  /* Feature card transitions */
  .feature-card {
    transition: all 0.3s ease;
  }

  /* Ensure smooth scrolling */
  html {
    scroll-behavior: smooth;
    scroll-padding-top: 80px; /* Account for fixed header */
  }

  /* Responsive padding adjustments */
  @media (max-width: 640px) {
    .py-16 {
      padding-top: 3rem;
      padding-bottom: 3rem;
    }

    .mb-20 {
      margin-bottom: 3rem;
    }
  }

  /* Print styles */
  @media print {
    .progress-bar,
    .navigation-controls {
      display: none;
    }

    .fade-in {
      opacity: 1;
      transform: none;
      animation: none;
    }

    article {
      page-break-inside: avoid;
    }
  }
</style>