---
import Layout from '../../layouts/Layout.astro';
import CaseStudyNavigation from '../../components/CaseStudyNavigation.astro';

const pageTitle = "Documentation Redesign";

// Updated navigation links with correct paths
const mainNavLinks = [
  { 
    name: 'Projects', 
    href: '/contentcraft/#projects'
  },
  { 
    name: 'About', 
    href: '/contentcraft/#about'
  },
  { 
    name: 'Contact', 
    href: '/contentcraft/#contact'
  }
];

const sectionNavLinks = [
  { label: "Challenge", href: "#challenge" },
  { label: "Strategy", href: "#strategy" },
  { label: "Results", href: "#results" },
  { label: "Insights", href: "#insights" }
];

// Rest of your data constants remain the same
const projectInfo = {
  client: "Enterprise Platform Team",
  role: "Documentation Lead",
  timeline: "2022-2023",
  focus: "Information Architecture"
};

// ... (keep all your other data constants)

const challenge = {
  title: "The Challenge",
  description: "Transform a complex, outdated documentation system into a modern, user-friendly knowledge hub that scales with the product while reducing maintenance overhead.",
  painPoints: [
    "Fragmented documentation across multiple platforms",
    "Inconsistent information architecture and style",
    "High maintenance overhead and outdated content",
    "Poor search functionality and content discoverability"
  ]
};

const strategy = {
  title: "Strategic Approach",
  steps: [
    {
      action: "Content Audit & Analysis",
      details: "Conducted comprehensive inventory of existing documentation, analyzing user behavior patterns and identifying critical gaps and redundancies"
    },
    {
      action: "Information Architecture Redesign",
      details: "Developed new task-based navigation system and content hierarchy, focusing on user journeys and common workflows"
    },
    {
      action: "Content Strategy Development",
      details: "Created scalable content framework with reusable components, style guides, and automated validation processes"
    },
    {
      action: "Implementation & Migration",
      details: "Executed phased migration to new system while maintaining content integrity and improving searchability"
    }
  ]
};

const implementation = {
  title: "Implementation Details",
  areas: [
    {
      title: "Task-Based Navigation",
      description: "Reorganized content around user tasks and goals, improving findability and relevance"
    },
    {
      title: "Content Components",
      description: "Created reusable content blocks and templates to ensure consistency and reduce maintenance"
    },
    {
      title: "Automated Validation",
      description: "Implemented automated checks for content quality, links, and style guide compliance"
    }
  ]
};

const outcomes = [
  {
    metric: "35%",
    label: "User Satisfaction",
    description: "Improved satisfaction scores through better content organization and findability"
  },
  {
    metric: "40%",
    label: "Update Speed",
    description: "Faster content updates through streamlined processes and automation"
  },
  {
    metric: "25%",
    label: "Support Load",
    description: "Reduction in documentation-related support queries"
  }
];

const insights = [
  "User behavior analysis is crucial for effective information architecture",
  "Standardized content components significantly reduce maintenance overhead",
  "Automated validation processes ensure consistent content quality",
  "Regular user testing drives continuous improvement in documentation usability"
];
---

<Layout title={pageTitle}>
  <!-- Updated Navigation Bar -->
  <nav class="sticky top-0 z-50 bg-white border-b border-gray-100">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex justify-between h-16">
        <!-- Left Side Navigation -->
        <div class="flex items-center space-x-8">
          <!-- Back to Home -->
          <a 
            href="/contentcraft" 
            class="flex items-center text-gray-500 hover:text-blue-600 transition-colors"
          >
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
            </svg>
            Back Home
          </a>

       </div>

        <!-- Right Side - Section Navigation -->
        <div class="hidden md:flex items-center space-x-8">
          {sectionNavLinks.map(link => (
            <a 
              href={link.href}
              class="text-sm text-gray-500 hover:text-blue-600 transition-colors"
            >
              {link.label}
            </a>
          ))}
        </div>
      </div>
    </div>
  </nav>

  <!-- Progress Bar -->
  <div class="fixed top-16 left-0 right-0 h-1 bg-gray-100 z-40">
    <div class="progress-bar h-full bg-blue-600"></div>
  </div>

  <!-- Hero Section -->
  <div class="bg-gradient-to-b from-green-50 to-white pt-20">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-24">
      <div class="max-w-3xl">
        <!-- Project Context -->
        <div class="mb-8">
          <div class="flex flex-wrap gap-2 mb-6">
            {Object.entries(projectInfo).map(([key, value]) => (
              <span class="px-3 py-1 text-sm bg-white text-gray-600 rounded-full">
                {value}
              </span>
            ))}
          </div>
          <h1 class="text-4xl font-bold text-gray-900 mb-4">{pageTitle}</h1>
          <p class="text-xl text-gray-600">
            Modernizing technical documentation through user-centered design and systematic content architecture.
          </p>
        </div>
      </div>
    </div>
  </div>

  <!-- Main Content -->
  <article class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
    <!-- The Challenge Section -->
    <section id="challenge" class="mb-16 scroll-mt-20">
      <h2 class="text-2xl font-bold text-gray-900 mb-6">{challenge.title}</h2>
      <p class="text-lg text-gray-600 mb-8">{challenge.description}</p>
      
      <div class="grid sm:grid-cols-2 gap-6">
        {challenge.painPoints.map(point => (
          <div class="bg-red-50 p-6 rounded-lg">
            <div class="flex items-start">
              <svg class="w-5 h-5 text-red-500 mt-1 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"/>
              </svg>
              <span class="text-gray-700">{point}</span>
            </div>
          </div>
        ))}
      </div>
    </section>

    <!-- Strategy Section -->
    <section id="strategy" class="mb-16 scroll-mt-20">
      <h2 class="text-2xl font-bold text-gray-900 mb-6">{strategy.title}</h2>
      
      <div class="space-y-8">
        {strategy.steps.map((step, index) => (
          <div class="relative pl-12">
            <div class="absolute left-0 top-0 w-8 h-8 bg-green-100 rounded-full flex items-center justify-center text-green-600 font-bold">
              {index + 1}
            </div>
            <h3 class="text-xl font-semibold text-gray-900 mb-2">{step.action}</h3>
            <p class="text-gray-600">{step.details}</p>
          </div>
        ))}
      </div>
    </section>

    <!-- Implementation Details -->
    <section class="mb-16 scroll-mt-20">
      <h2 class="text-2xl font-bold text-gray-900 mb-6">{implementation.title}</h2>
      
      <div class="grid sm:grid-cols-3 gap-6">
        {implementation.areas.map(area => (
          <div class="bg-white p-6 rounded-xl shadow-sm hover:shadow-md transition-shadow border border-gray-100">
            <h3 class="font-semibold text-gray-900 mb-2">{area.title}</h3>
            <p class="text-sm text-gray-600">{area.description}</p>
          </div>
        ))}
      </div>
    </section>

    <!-- Outcomes Section -->
    <section id="results" class="mb-16 scroll-mt-20">
      <h2 class="text-2xl font-bold text-gray-900 mb-6">Impact & Results</h2>
      
      <div class="grid sm:grid-cols-3 gap-8">
        {outcomes.map(outcome => (
          <div class="bg-white p-6 rounded-xl shadow-sm hover:shadow-md transition-shadow">
            <div class="text-3xl font-bold text-green-600 mb-2">{outcome.metric}</div>
            <div class="font-medium text-gray-900 mb-2">{outcome.label}</div>
            <p class="text-sm text-gray-600">{outcome.description}</p>
          </div>
        ))}
      </div>
    </section>

    <!-- Key Insights -->
    <section id="insights" class="bg-gray-50 rounded-2xl p-8 mb-16 scroll-mt-20">
      <h2 class="text-2xl font-bold text-gray-900 mb-6">Key Insights</h2>
      <div class="space-y-4">
        {insights.map(insight => (
          <div class="flex items-start">
            <svg class="w-5 h-5 text-green-600 mt-1 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
            </svg>
            <p class="text-gray-600">{insight}</p>
          </div>
        ))}
      </div>
    </section>

    <!-- Case Study Navigation -->
    <CaseStudyNavigation currentSlug="documentation-redesign" />
  </article>
</Layout>

<style>
  .scroll-mt-20 {
    scroll-margin-top: 5rem;
  }

  .progress-bar {
    width: 0;
    transition: width 0.2s ease-out;
  }

  .transition-all {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 300ms;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const progressBar = document.querySelector('.progress-bar');
    const sections = document.querySelectorAll('section[id]');
    const navLinks = document.querySelectorAll('nav a[href^="#"]');

    // Handle main navigation links
    document.querySelectorAll('a[href^="/contentcraft/#"]').forEach(link => {
      link.addEventListener('click', (e) => {
        const href = link.getAttribute('href');
        if (href) {
          e.preventDefault();
          window.location.href = href;
        }
      });
    });

    // Progress bar functionality
    function updateProgressBar() {
      if (!progressBar) return;

      const winScroll = window.scrollY;
      const height = document.documentElement.scrollHeight - window.innerHeight;
      const scrolled = (winScroll / height) * 100;
      progressBar.style.width = scrolled + '%';
    }

    // Section navigation (smooth scroll)
    navLinks.forEach(link => {
      link.addEventListener('click', e => {
        e.preventDefault();
        const targetId = link.getAttribute('href');
        if (!targetId) return;

        const targetSection = document.querySelector(targetId);
        if (targetSection) {
          const headerOffset = 80;
          const elementPosition = targetSection.getBoundingClientRect().top;
          const offsetPosition = elementPosition + window.pageYOffset - headerOffset;

          window.scrollTo({
            top: offsetPosition,
            behavior: 'smooth'
          });
        }
      });
    });

    // Active section highlighting
    function updateActiveSection() {
      const fromTop = window.scrollY + 100;

      sections.forEach(section => {
        const id = section.getAttribute('id');
        const link = document.querySelector(`nav a[href="#${id}"]`);
        
        if (!link) return;

        const scrollAtSectionTop = section.offsetTop;
        const scrollAtSectionBottom = scrollAtSectionTop + section.offsetHeight;

        if (fromTop >= scrollAtSectionTop && fromTop <= scrollAtSectionBottom) {
          link.classList.add('text-blue-600');
          link.classList.remove('text-gray-500');
        } else {
          link.classList.remove('text-blue-600');
          link.classList.add('text-gray-500');
        }
      });
    }

    // Event listeners
    window.addEventListener('scroll', () => {
      updateProgressBar();
      updateActiveSection();
    });

    window.addEventListener('resize', updateProgressBar);
    
    // Initial update
    updateProgressBar();
    updateActiveSection();
  });
</script>